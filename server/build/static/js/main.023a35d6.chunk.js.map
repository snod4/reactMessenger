{"version":3,"sources":["Heading.jsx","MessageHeader.jsx","UserLookup.jsx","Account.jsx","Sidebar.jsx","Input.jsx","ImagePopup.jsx","Message.jsx","ChatView.jsx","Login.jsx","App.jsx","index.js","helper.js"],"names":["Heading","MessageHeader","props","messageHeader","activeClass","notify","className","onClick","convoRef","newMessage","selectConverstation","name","convoId","recipientId","src","image","alt","content","message","substr","type","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","fetch","method","body","JSON","stringify","headers","removeFromConvoArr","href","UserLookup","useState","value","setValue","show","items","displayItems","setDisplayItems","useEffect","then","response","json","docs","console","log","onChange","event","currentVal","target","onFocus","prev","onBlur","placeholder","map","item","key","realName","addToConvoArr","recipientName","_id","recipientPhoto","mostRecentMessage","Account","accountName","logout","Sidebar","convoArr","setConvoArr","convo","i","length","splice","img","fileTypes","Input","text","setText","images","setImages","display","visibility","setVisibility","handleClick","preview","document","querySelector","firstChild","removeChild","input","files","sendMessage","e","a","list","createElement","appendChild","curFiles","imgArray","file","toBase64","push","listItem","includes","URL","createObjectURL","style","width","multiple","rows","aria-label","onKeyUp","keyCode","ImagePopup","visible","aspectRatio","height","Message","wrapper","message_css","image_css","sent","data","fromBase64","stopPropagation","showPopup","ChatView","ws","canPlay","notificationSound","Audio","addEventListener","messages","setMessages","popup","setPopup","handlePopupClick","modal","notifySound","play","window","removeEventListener","senderId","responseJSON","onmessage","messageJson","parse","updateContent","senderName","valign","recipeintId","index","prevMessages","send","require","config","Login","register","user","password","loginInfo","setLogin","htmlFor","required","autoFocus","prevLogin","preventDefault","login","convos","forEach","handleLogin","App","process","loginResults","isLoggedIn","HOST","location","origin","replace","tempWs","WebSocket","onopen","setWebSocket","activeConvo","setConvo","close","loginJson","ReactDOM","render","getElementById","catch","err","module","exports","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Image"],"mappings":"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","file":"static/js/main.023a35d6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Heading(){\n  return (\n    <header> Messenger App</header>\n  );\n}\n\nexport default Heading;\n","import React from \"react\";\n\nfunction MessageHeader(props){\n    let messageHeader = \"message-header\";\n    let activeClass = messageHeader;\n    if(props.notify){\n      activeClass = messageHeader + \" notify\";\n    }\n\n    function handleRemove(){\n    fetch(process.env.REACT_APP_API_URL+ \"/removeConvo\", {\n\n      // Adding method type\n      method: \"POST\",\n\n      // Adding body or contents to send\n      body: JSON.stringify({convoId: props.convoId, recipientId: props.recipientId}),\n\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n    props.removeFromConvoArr(props.convoRef);\n  }\n  return (\n    <div className = {activeClass} onClick = {() => {\n      props.convoRef.newMessage = false; //Sketchy solution. Fix?\n      props.selectConverstation(props.name, props.convoId, props.recipientId)}}>\n    <div className = \"row\">\n        <div className =\"profilePic col-3\">\n          <img src = {props.image} alt  = \"profile picture\"/>\n        </div>\n        <div className = \"messageInfo col-8\">\n          <h3>{props.name}</h3>\n          <p>{props.content != null ? ((props.content.message != null) ? props.content.message.substr(0, 30) :\"Sent a photo\") : \"Send this person a message\"}</p>\n        </div>\n        <div className = \"message-header-options col-1\">\n        <div className=\"align-self-center dropdown\">\n                    <button className=\"messeage-header-options-btn\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        ...\n                    </button>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                        <a className=\"dropdown-item\" onClick = {handleRemove}>Remove</a>\n                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                    </div>\n                </div>\n        </div>\n      </div>\n      </div>\n      );\n}\n\nexport default MessageHeader;\n","import React, {useState, useEffect} from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction UserLookup(props){\n  const [value, setValue] = useState(\"\");\n  const [displayItems, setDisplayItems] = useState({\n    show:false,\n    items:[]\n  });\n\n  function updateInput(event){\n    const currentVal = event.target.value;\n    setValue(currentVal);\n   }\n\n   useEffect(() => {\n     if(value === \"\"){\n       setDisplayItems({\n         show:false,\n         items: []})\n       return;\n     }\n     fetch(process.env.REACT_APP_API_URL + \"/userLookup\", {\n\n       // Adding method type\n       method: \"POST\",\n\n       // Adding body or contents to send\n       body: JSON.stringify({name: value}),\n\n       // Adding headers to the request\n       headers: {\n           \"Content-type\": \"application/json; charset=UTF-8\"\n       }\n     })\n     .then(response => response.json())\n     .then(docs => {\n       console.log(docs);\n       setDisplayItems({\n         show:true,\n         items: docs});\n     })}, [value]);\n\n\n\n  return (\n    <div className = \"add-convo\">\n\n\n            <input onChange = {updateInput} onFocus = {() => setDisplayItems(prev => {return {show: true, items: prev.items}})} onBlur = {() => setDisplayItems( prev => {return {show: true, items: prev.items}})}type= \"text\" placeholder = \"Name\" value = {value}/ >\n            {displayItems.show ? <div className = \"search-results\">{displayItems.items.map((item, key) =>{\n              return <div onClick = {() => {\n                setDisplayItems(prev => {return {...prev, show:false}});\n                console.log(`Item.realName: ${item.realName}`)\n                props.addToConvoArr({\n                  recipientName: item.realName,\n                   convoId: null,\n                   recipientId: item._id,\n                   recipientPhoto:\"\",\n                   notify: false,\n                   mostRecentMessage: null\n\n                  });\n                  }}>\n                  {item.realName}\n                   </div>})}\n                  </div>\n                  :null}\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default UserLookup;\n","import React from \"react\";\r\n\r\nfunction Account(props){\r\n\r\n\r\n    return (\r\n        <div className = \"containter account-div\">\r\n            <div className = \"row \">\r\n                <div className = \"account-name col-7 \"><h3>{props.accountName}</h3></div>\r\n                <div className=\"account-options align-self-center col-5 dropdown  \">\r\n                    <button className=\"btn shadow-none dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Options\r\n                    </button>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <a className=\"dropdown-item\" onClick = {props.logout}>Log out</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                    </div>\r\n                </div>            \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Account;","import React, {useState} from \"react\";\nimport MessageHeader from \"./MessageHeader\";\nimport UserLookup from \"./UserLookup\";\nimport Account from \"./Account\"\n\nfunction Sidebar(props){\nlet [convoArr, setConvoArr] = useState(props.convoArr);\nconsole.log(convoArr);\n//Add functionality to create basic conversations\nfunction addToConvoArr(convo){\n  for(let i = 0; i < convoArr.length; i++){\n    if(convoArr[i].recipientId === convo.recipientId){\n      return;\n    }\n  }\n  setConvoArr([...convoArr, convo]);\n}\n\nfunction removeFromConvoArr(convo){\n  for(let i = 0; i < convoArr.length; i++){\n    if(convoArr[i].recipientId === convo.recipientId){\n      convoArr.splice(i,1);\n      break;\n    }\n  }\n  setConvoArr([...convoArr]);\n}\nconsole.log(`ConvoArr`)\nconsole.log(convoArr)\n  return (\n    <div className = \"sidebar\">\n        <Account accountName = {props.name} logout = {props.logout}/>\n        <UserLookup addToConvoArr = {addToConvoArr} />\n        {convoArr.map((convo, key) => {\n            return <MessageHeader\n            key = {key}\n            convoRef= {convo}\n            notify = {convo.newMessage}\n            convoId= {convo.convoId}\n            recipientId = {convo.recipientId}\n            selectConverstation = {props.selectConverstation}\n            image = {convo.img}\n            name = {convo.recipientName}\n            content = {convo.mostRecentMessage}\n            removeFromConvoArr = {removeFromConvoArr}/>\n\n        })}\n      </div>\n\n);\n}\n\nexport default Sidebar;\n","import React, {useState} from \"react\";\nimport {toBase64} from './helper.js';\nconst fileTypes = [\n  \"image/jpg\",\n  \"image/gif\",\n  \"image/jpeg\",\n  \"image/png\",\n\n];\n\nfunction Input(props){\n\n  const [text, setText] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [visibility, setVisibility] = useState({display:\"none\"})\n\n  \n  function updateMessage(event){\n    setText(event.target.value);\n  }\n\n  function handleClick(event){\n      console.log(\"Handle click\");\n      const preview = document.querySelector(\".preview\");\n      while(preview.firstChild){\n        preview.removeChild(preview.firstChild);\n      }\n      const input = document.querySelector(\".file_input\");\n      input.value = \"\";\n      input.files = null;\n\n    \n    props.sendMessage(text, images);\n    setText(\"\");\n    setImages([]);\n  }\n\n  function handleEnter(event){\n    console.log(\"Got to enter\")\n    if(event.keyCode === 13){\n      handleClick(event);\n    }\n  }\n\n //handles image selection and its thumbnail\n  //thx stack overflow\n\n\n  async function handleImageSelection(e){\n    console.log(\"handleImageSelection\")\n    const preview = document.querySelector(\".preview\");\n    while(preview.firstChild){\n      preview.removeChild(preview.firstChild);\n    }\n\n    const list = document.createElement(\"ol\");\n    preview.appendChild(list);\n\n    const curFiles = e.target.files;\n    let imgArray = [];\n    console.log(`Length: ${curFiles.length}`);\n   \n    for(const file of curFiles){\n      imgArray.push(\n        await toBase64(file)\n      );\n      const listItem = document.createElement(\"li\");\n      if(fileTypes.includes(file.type)){\n\n        console.log(\"loop\");\n\n        const image = document.createElement(\"img\");\n        image.src = URL.createObjectURL(file);\n        image.style.width = \"60px\";\n        listItem.appendChild(image);\n        list.appendChild(listItem);\n\n      }\n    }\n\n    setImages(imgArray);\n\n    \n\n  }\n\n  \n  return (\n\n    <div className =\"messages\">\n    <div className=\"input-group mb-3\">\n      <div className=\"input-group-prepend\">\n        <span className=\"input-group-text\" >\n          {visibility.display === 'none' ? <div onClick = {() => {setVisibility({display:\"block\"})}}>+</div>:\"\"}\n          <div style = {visibility}>\n            <input className = \"file_input\" type = \"file\" multiple = \"true\" onChange = {handleImageSelection}/>\n            <div  className = \"preview\"></div>\n            <button onClick = {()=>{\n              const preview = document.querySelector(\".preview\");\n              while(preview.firstChild){\n                preview.removeChild(preview.firstChild);\n              }\n              const input = document.querySelector(\".file_input\");\n              input.value = \"\";\n              input.files = null;\n              setImages([]);\n              setVisibility({display:\"none\"});\n\n            }}\n            type=\"button\" className=\"btn btn-danger\">Cancel</button>\n          </div>\n        </span>\n      </div>\n      <textarea type=\"text\" rows = \"1\" className=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" onChange = {updateMessage} value = {text} onKeyUp = {handleEnter}></textarea>\n      <div className=\"input-group-append\">\n        <span className=\"input-group-text\" onClick = {handleClick} >Send</span>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Input;\n","import React, { useEffect } from \"react\";\n\n\n\nfunction ImagePopup(props){\n    \n    let visible;\n    let aspectRatio;\n    if(props.visible){\n        visible = \"popup-visible\";\n        if(props.image.width > props.image.height){\n            aspectRatio = \"popup-wide\"\n            console.log(`Image width: ${props.image.width}, Image height: ${props.image.height}`);\n        }\n        else{\n            aspectRatio = \"popup-tall\";\n            console.log(`Image width: ${props.image.width}, Image height: ${props.image.height}`);\n\n        }\n    }\n    else{\n        visible = \"popup-hidden\";\n    }\n    \n    return <div className = {visible + \" center\"} >\n        <img className = {aspectRatio} src = {props.image !== null ? props.image.src : \"\"} />\n    </div>\n}\n\nexport default ImagePopup;","import React from \"react\";\nimport {fromBase64} from './helper.js';\nimport ImagePopup from './ImagePopup';\n\nfunction Message(props){\n  let wrapper = \"\";\n  let message_css = \"\"\n  let image_css = \"\"\n  if(props.sent){\n    wrapper = \"wrapper-r\";\n    message_css = \"message-text-r\"\n    image_css = \"message-image-r\"\n  }\n  else{\n    wrapper = \"wrapper-l\";\n    message_css = \"message-text-l\"\n    image_css = \"message-image-l\"\n  }\n \n  return (\n    <div className = {wrapper}>\n    <div>\n      {props.images.length != 0 ? props.images.map((data) => {\n        let image = fromBase64(data);\n        console.log(\"Rendering\");\n        return <img onClick = {(e) => {\n          console.log(\"Clicking Image\")\n          e.stopPropagation();\n          props.showPopup({visible:true, image:image})}} className = {image_css} src = {image.src} />\n      }) : null}\n\n      { props.message.length != 0 ? <p className = {message_css}>{props.message}</p> : null}\n      \n    </div>\n    </div>\n\n  );\n}\n\nexport default Message;\n","import React, {useState, useEffect} from \"react\";\nimport Input from \"./Input\";\nimport Message from \"./Message\";\nimport WebSocket from \"isomorphic-ws\";\nimport {fromBase64} from './helper.js';\nimport ImagePopup from './ImagePopup';\n\n\nfunction ChatView(props){\nconst NOTIFY = true;\nconst NOT_NOTIFY = false;\nconst ws = props.ws;\nlet canPlay = false;\nconst notificationSound = new Audio(\"./notificationSound.mp3\");\nnotificationSound.addEventListener(\"canplaythrough\", event => {\n/* the audio is now playable; Play it if permissions allow */\ncanPlay = true;\n});\n  const [messages, setMessages] = useState([]);\n  const [popup, setPopup] = useState({\n    visible:false,\n    image: null\n  })\n  function handlePopupClick(event){\n    event.stopPropagation();\n    const modal = document.querySelector(\".popup-visible\");\n    if(modal !== null && event.target !== modal){\n      console.log(\"Got to window click\");\n      setPopup({visible: false, image:null});\n    }\n  }\n  useEffect(() => {\n    console.log(`popup useEffect`)\n    if(popup.visible){\n      console.log(\"Adding listner\")\n      window.addEventListener(\"click\", handlePopupClick)\n    }\n    else{\n      console.log(\"Removing event listener\")\n      window.removeEventListener(\"click\", handlePopupClick)\n    }\n  }, [popup, handlePopupClick])\n\n  useEffect(()=>{\n    console.log(\"Got use useEffect\")\n    if(props.recipientId === -1){\n      return;\n    }\n    console.log(`Got to chat fetch, recipeintId: ${props.recipientId}, name: ${props.name}`)\n      fetch(process.env.REACT_APP_API_URL + \"/chat\", {\n\n        // Adding method type\n        method: \"POST\",\n\n        // Adding body or contents to send\n        body: JSON.stringify({convoId: props.convoId, recipientId: props.recipientId, senderId: props.senderId, recipientName: props.name}),\n\n        // Adding headers to the request\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      })\n      .then(response => response.json())\n      .then(responseJSON => {\n        //console.log(`Data: ${responseJSON.data}, typeof: ${typeof responseJSON.data}`)\n        //console.log(responseJSON.data)\n        // let currentItem;\n        // for(let i = 0; i < responseJSON.data.length; i++){\n        //   currentItem = responseJSON.data[i];\n        //   if(currentItem.images.length != 0){\n        //     for(let g = 0; g < currentItem.images.length; g++){\n        //       console.log(\"JSON STRING: \" + JSON.stringify(currentItem.images[g]))\n        //       currentItem.images[g] = fromBase64(currentItem.images[g]);\n        //       console.log(\"Chatview Image Src: \" + currentItem.images[g]);\n        //     }\n        //   }\n        // }\n        setMessages(responseJSON.data);\n      });\n\n  }, [props.convoId, props.name, props.recipientId, props.senderId]);\n\n  function notifySound(){\n    if(canPlay){\n      notificationSound.play();\n    }\n  }\n\n ws.onmessage = message => {\n   console.log(\"RECIEVED MESSAGE FROM SERVER\")\n   console.log(message)\n   const messageJson = JSON.parse(message.data);\n\n  //  if(messageJson.images.length != 0){\n  //    messageJson.images = messageJson.images.map(fromBase64);\n  //  }\n\n   console.log(messageJson)\n   if(messageJson.senderId === props.recipientId){\n     notifySound();\n     props.updateContent(messageJson.senderId, ((messageJson.message !== null && messageJson.message.length !== 0) ? messageJson.message : \"Sent a photo\"), messageJson.senderName, messageJson.convoId, NOT_NOTIFY);\n     setMessages([...messages, {id:messageJson.recipientId, message: messageJson.message, images: messageJson.images}]);\n   }\n   else{\n     notifySound();\n     console.log(\"Hewre\")\n     props.updateContent(messageJson.senderId, ((messageJson.message !== null && messageJson.message.length !== 0) ? messageJson.message : \"Sent a photo\"), messageJson.senderName, messageJson.convoId, NOTIFY);\n   }\n };\n\n  console.log(`messages:`);\n  console.log(messages)\n  console.log(ws) \n\n\n  function addUserMessage(message, images){\n    if(message === \"\" && images.length == 0){\n      return;\n    }\n  \n    setMessages(prevMessages => {\n      prevMessages.push({\n        id:props.senderId,\n        message: message,\n        images: images\n      });\n      console.log(\"ChatView WS:\");\n      console.log(ws);\n      ws.send(JSON.stringify({\n        recipientId:props.recipientId,\n        message: message,\n        images: images\n      }));\n\n      props.updateContent(props.recipientId, (message != null && message.length != 0 ? message : \"Sent a photo\") , \"\", props.convoId, NOT_NOTIFY);\n\n\n      return [...prevMessages];\n    });\n  }\n\n\n\n\n\n\nreturn (\n  <div className = \"messageWindow\"> \n  <ImagePopup visible = {popup.visible} image = {popup.image} />\n  <table className={\"chatTable \" + (popup.visible? \"hide\" : \"\")}>\n    <tbody>\n            <tr className = \"name-plate\">\n                <td valign=\"top\"><h1>{props.recipientId !== -1 ? props.name: \"Pick someone\"}</h1></td>\n            </tr>\n            <tr>\n              <td valign = \"middle\" style = {{height:\"100%\"}} >\n\n              <div className = \"message-text-section\">\n                {props.recipeintId !== -1 ? messages.map((item, index) => <Message key = {index} showPopup = {setPopup} message = {item.message} images = {item.images} sent = {item.id === props.senderId} />) : \"Start Chatting Here\"}\n                </div>\n              </td>\n            </tr>\n            <tr>\n                <td valign=\"bottom\">{ props.recipientId !== -1 ? <Input sendMessage = {addUserMessage}/> : null}</td>\n            </tr>\n        </tbody>\n    </table>\n\n    </div>\n        \n);\n}\n\nexport default ChatView;\n","import React, {useState} from \"react\";\nrequire(\"dotenv\").config();\n\n\nfunction Login(props){\n  const [loginInfo,setLogin] = useState({\n    register: false,\n    user: \"\",\n    password: \"\",\n    name:\"\"\n  })\n  function updateUser(event){\n    loginInfo.user = event.target.value;\n    setLogin(prevLogin => {return {...prevLogin}});\n  }\n  function updatePassword(event){\n    loginInfo.password = event.target.value;\n    setLogin(prevLogin => {return {...prevLogin}});\n  }\n  function updateName(event){\n    loginInfo.name = event.target.value;\n    setLogin(prevLogin => {return {...prevLogin}});\n  }\n  function handleRegister(e){\n    e.preventDefault();\n    fetch(process.env.REACT_APP_API_URL + \"/register\", {\n\n        // Adding method type\n        method: \"POST\",\n\n        // Adding body or contents to send\n        body: JSON.stringify(loginInfo),\n\n        // Adding headers to the request\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n\n    })\n    .then(response => response.json())\n    .then(login => {\n      console.log(\"Login:\");\n      console.log(login);\n      console.log(\"END\");\n      login.convos.forEach((item) => { // At the moment, only conversations updated while in app get notification\n        item.notify = false;\n      })\n      props.handleLogin(login);\n    });\n  }\n  function handleLogin(e){\n    e.preventDefault();\n    fetch(process.env.REACT_APP_API_URL + \"/login\", {\n\n        // Adding method type\n        method: \"POST\",\n\n        // Adding body or contents to send\n        body: JSON.stringify(loginInfo),\n\n        // Adding headers to the request\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n\n    })\n    .then(response =>{ \n      console.log(response);\n      return response.json();\n    })\n    .then(login => {\n      console.log(\"Login:\");\n      console.log(login);\n      console.log(\"END\");\n      login.convos.forEach((item) => { // At the moment, only conversations updated while in app get notification\n        item.notify = false;\n      })\n      props.handleLogin(login);\n\n    });\n  }\n  console.log(\"Register: \" + loginInfo.register);\n  return (\n    <div className = \"text-center body-sign-in\">\n      <form className=\"form-signin\">\n      <img className=\"mb-4\" src=\"/docs/4.5/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\"/>\n      <h1 className=\"h3 mb-3 font-weight-normal\">{loginInfo.register ? \"Register\" : \"Please Sign In\"}</h1>\n      {loginInfo.register ? <div>\n        <label htmlFor=\"inputName\" className=\"sr-only\">Name</label>\n        <input type=\"text\" id=\"inputName\" className=\"form-control\" placeholder=\"Name\" required=\"\" autoFocus=\"\" onChange = {updateName} value = {loginInfo.name}/></div>:null}\n      <label htmlFor=\"inputEmail\" className=\"sr-only\">Email address</label>\n      <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" required=\"\" autoFocus=\"\" onChange = {updateUser} value = {loginInfo.user}/>\n      <label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\n      <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required=\"\"  onChange = {updatePassword} value = {loginInfo.password}/>\n      <div className=\"checkbox mb-3\">\n        <label>\n          <input type=\"checkbox\" value=\"remember-me\"/>\n        </label>\n      </div>\n      <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" onClick = {loginInfo.register ? handleRegister : handleLogin}>{loginInfo.register ? \"Register\" : \"Sign In\"}</button>\n      {!loginInfo.register ? <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\"\n      onClick = {() => {setLogin(prevLogin => {\n        prevLogin.register = true;\n        return {...prevLogin};\n      })}}>Register</button>\n  : null}\n      <p className=\"mt-5 mb-3 text-muted\">© 2017-2020</p>\n      </form>\n      </div>\n\n  );\n}\n\nexport default Login;\n","import React, {useState, useEffect, useLayoutEffect} from \"react\";\nimport Heading from \"./Heading\";\nimport Sidebar from \"./Sidebar\";\nimport ChatView from \"./ChatView\";\nimport WebSocket from \"isomorphic-ws\";\nimport Login from \"./Login\"\nrequire(\"dotenv\").config();\n\n\n\nfunction App(props){\n\n  console.log(`process.env.API_URL = ${process.env.REACT_APP_API_URL}`)\n  function heartbeat() {\n    clearTimeout(this.pingTimeout);\n\n    // Use `WebSocket#terminate()`, which immediately destroys the connection,\n    // instead of `WebSocket#close()`, which waits for the close timer.\n    // Delay should be equal to the interval at which your server\n    // sends out pings plus a conservative assumption of the latency.\n    this.pingTimeout = setTimeout(() => {\n      this.terminate();\n    }, 30000 + 1000);\n  }\n\n\n\n  const [login, setLogin] = useState({...props.loginResults});\n  const [ws, setWebSocket] = useState(()=>{\n    if(login.isLoggedIn){\n      let HOST = null;\n      if(window.location.origin.includes(\"messenger-snodgras4\")){\n        HOST = window.location.origin.replace(/^https/, 'wss');\n      }\n      else if(window.location.origin.includes(\"localhost\")){\n        HOST = 'ws://localhost:3001';\n      }\n      \n      console.log(\"WS URI: \" + HOST);\n      const tempWs = new WebSocket(HOST);\n       tempWs.onopen = function open() {\n       tempWs.send(login.id);\n       console.log(`loginId: ${login.id}`);\n     };\n     return tempWs;\n    }\n    return null;\n  });\n  const [activeConvo, setConvo] = useState({\n    name:\"\",\n    convoId:-1,\n    recipientId: -1\n  });\n\n\n\n\n\n if(ws == null && login.isLoggedIn){\n  console.log(\"Connecting WebSocket\")\n  let HOST = null;\n  if(window.location.origin.includes(\"messenger-snodgras4\")){\n    HOST = window.location.origin.replace(/^https/, 'wss');\n  }\n  else if(window.location.origin.includes(\"localhost\")){\n    HOST = 'ws://localhost:3001';\n  }\n  \n  console.log(\"WS URI: \" + HOST);\n  const tempWs = new WebSocket(HOST);\n    tempWs.onopen = function open() {\n  tempWs.send(login.id);\n  console.log(`loginId: ${login.id}`);\n  };\n  setWebSocket(tempWs);\n}\n if(!login.isLoggedIn){\n   return (\n     <Login handleLogin = {login => {\n       console.log(\"Login Handler:\")\n       console.log(login)\n       setLogin({...login});\n     }\n     }/>\n   );\n }\n else{\n\n   function changeConvo(name, convoId, recipientId){\n     setConvo({name:name, convoId: convoId, recipientId: recipientId});\n   }\n\n   function updateContent(senderId, message, senderName, convoId, notify){\n     console.log(`Update Content notify: ${notify}`);\n     setLogin(prev => {\n       for(let i = 0; i < prev.convos.length; i++){\n         if(prev.convos[i].recipientId === senderId){\n           prev.convos[i].newMessage = notify;\n           prev.convos[i].mostRecentMessage = {id:senderId, message:message};\n           //Play sound\n            return {...prev};\n         }\n       }\n\n       //Adds new convo in case new user contacted client\n       prev.convos.push({\n         recipientId:senderId, //id of person a user is talking to\n         convoId: convoId,\n         recipientName:senderName,\n         recipientPhoto:\"\",\n         newMessage: notify,\n         mostRecentMessage: {id:senderId, message:message}\n        });\n         return {...prev}\n\n     })\n   }\n   /// FIGURE OUT HOW TO GET SIDEBAR INFO FROM SEVER AND FIGURE OUT ACTIVE CONVO ON INITIAL LOAD\n\n\n   function logout(){\n     console.log(\"Logging out\")\n     fetch(\"/logout\", {\n\n      // Adding method type\n      method: \"POST\",\n\n      // Adding body or contents to send\n      body: JSON.stringify({id:login.id}),\n\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n    .then(response => {\n      ws.close(1000);\n     setWebSocket(null);\n     setLogin({\n       isLoggedIn:false\n     });\n    });\n  }\n\n  return (\n    <div style = {{height:\"inherit\"}}>\n\n    <Sidebar selectConverstation = {changeConvo} convoArr = {login.convos} name = {login.name} logout = {logout}/>\n     <ChatView convoId = {activeConvo.convoId} recipientId = {activeConvo.recipientId} senderId = {login.id} ws = {ws} name = {activeConvo.name} updateContent = {updateContent} />\n     </div>\n  );\n}\n\n}\n\nexport default App;\n","import React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\n\n\nconsole.log(\"In index.js testing\")\nconsole.log(`process.env.PROXY_API = ${process.env.REACT_APP_API_URL + \"/home\"}`)\n\nfetch(process.env.REACT_APP_API_URL + \"/home\").then(response => {\n  console.log(response);\n  return response.json()\n})\n.then(loginJson => {\n  console.log(`index.js Login: ${loginJson.isLoggedIn}`);\n  ReactDOM.render(<App loginResults = {loginJson}/>, document.getElementById(\"root\"));\n  return;\n}).catch(err => console.log(err));\n\n\n\n\n\n","\n  //converts images to base64 for sending thru websockets\n  const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    console.log(\"Converting\");\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n\n  //converts images from base64 to an image to be displayed\nfunction fromBase64(data){\n    var image = new Image();\n    image.src = data;\n    return image;\n}\n  module.exports = {\n      toBase64, \n      fromBase64\n  };"],"sourceRoot":""}